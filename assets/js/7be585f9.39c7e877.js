"use strict";(self.webpackChunkbrooder=self.webpackChunkbrooder||[]).push([[2484],{469:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"workflows/auth/login-and-activation","title":"Login and Activation","description":"This document outlines the process for user login, account activation, and re-sending the One-Time Password (OTP). This workflow follows the initial Registration process.","source":"@site/docs/workflows/auth/login-and-activation.md","sourceDirName":"workflows/auth","slug":"/workflows/auth/login-and-activation","permalink":"/brooder-doc/docs/workflows/auth/login-and-activation","draft":false,"unlisted":false,"editUrl":"https://github.com/khalidgxg/brooder/tree/main/docs/workflows/auth/login-and-activation.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Registration","permalink":"/brooder-doc/docs/workflows/auth/registration"},"next":{"title":"Password Management","permalink":"/brooder-doc/docs/workflows/auth/password-management"}}');var r=s(4848),t=s(8453);const o={},d="Login and Activation",c={},a=[{value:"Flow Diagrams",id:"flow-diagrams",level:2},{value:"Login Flow",id:"login-flow",level:3},{value:"Activation Flow",id:"activation-flow",level:3},{value:"Resend OTP Flow",id:"resend-otp-flow",level:3},{value:"1. Login",id:"1-login",level:2},{value:"Request Body",id:"request-body",level:3},{value:"Success Response (200 OK)",id:"success-response-200-ok",level:3},{value:"Error Responses",id:"error-responses",level:3},{value:"2. Activate Account",id:"2-activate-account",level:2},{value:"Request Body",id:"request-body-1",level:3},{value:"Success Response (200 OK)",id:"success-response-200-ok-1",level:3},{value:"Error Response (422 Unprocessable Entity)",id:"error-response-422-unprocessable-entity",level:3},{value:"3. Resend OTP",id:"3-resend-otp",level:2},{value:"Request Body",id:"request-body-2",level:3},{value:"Success Response (200 OK)",id:"success-response-200-ok-2",level:3},{value:"Error Response (400 Bad Request)",id:"error-response-400-bad-request",level:3},{value:"Code Highlights &amp; Key Concepts",id:"code-highlights--key-concepts",level:3},{value:"Login (<code>LoginAction</code>)",id:"login-loginaction",level:4},{value:"Activate Account (<code>ActivateAccountAction</code>)",id:"activate-account-activateaccountaction",level:4},{value:"Resend OTP (<code>ResendOtpAction</code>)",id:"resend-otp-resendotpaction",level:4}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"login-and-activation",children:"Login and Activation"})}),"\n",(0,r.jsxs)(n.p,{children:["This document outlines the process for user login, account activation, and re-sending the One-Time Password (OTP). This workflow follows the initial ",(0,r.jsx)(n.a,{href:"./registration",children:"Registration"})," process."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"flow-diagrams",children:"Flow Diagrams"}),"\n",(0,r.jsx)(n.h3,{id:"login-flow",children:"Login Flow"}),"\n",(0,r.jsx)(n.mermaid,{value:'graph LR;\r\n    A["User sends email and password"] --\x3e B{"POST /api/v1/login"};\r\n    B --\x3e C{"Backend validates credentials"};\r\n    C -- Valid --\x3e D["User account is fetched"];\r\n    D --\x3e E{"Is account active?"};\r\n    E -- Yes --\x3e F["Generate and return<br/>Access Token and User Data"];\r\n    E -- No --\x3e G["Return \'Account not verified\' error"];\r\n    C -- Invalid --\x3e H["Return \'Invalid credentials\' error"];'}),"\n",(0,r.jsx)(n.h3,{id:"activation-flow",children:"Activation Flow"}),"\n",(0,r.jsx)(n.mermaid,{value:'graph LR;\r\n    I["User provides email and OTP"] --\x3e J{"POST /api/v1/activate-account"};\r\n    J --\x3e K{"Backend finds user by email"};\r\n    K --\x3e L{"Verifies OTP and checks expiry"};\r\n    L -- Valid --\x3e M["Activate user account"];\r\n    M --\x3e N["Generate and return<br/>Access Token and User Data"];\r\n    L -- Invalid --\x3e O["Return \'Invalid OTP\' error"];'}),"\n",(0,r.jsx)(n.h3,{id:"resend-otp-flow",children:"Resend OTP Flow"}),"\n",(0,r.jsx)(n.mermaid,{value:'graph LR;\r\n    P["User provides email"] --\x3e Q{"POST /api/v1/resend-otp"};\r\n    Q --\x3e R{"Backend finds user by email"};\r\n    R --\x3e S{"Is account already active?"};\r\n    S -- No --\x3e T["Generate new OTP and<br/>send to user\'s email"];\r\n    T --\x3e U["Return OTP expiry time"];\r\n    S -- Yes --\x3e V["Return \'Account already verified\' error"];'}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"1-login",children:"1. Login"}),"\n",(0,r.jsxs)(n.p,{children:["This endpoint authenticates a user and returns an access token if the credentials are valid and the account is active. If you have forgotten your password, please see the ",(0,r.jsx)(n.a,{href:"./password-management",children:"Password Management"})," workflow."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Endpoint:"})," ",(0,r.jsx)(n.code,{children:"POST /api/v1/login"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Method:"})," ",(0,r.jsx)(n.code,{children:"POST"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Authentication:"})," Not required"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"request-body",children:"Request Body"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Rules"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"email"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Required, valid email."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"password"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Required."})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"success-response-200-ok",children:"Success Response (200 OK)"}),"\n",(0,r.jsx)(n.p,{children:"Returns user data and an access token."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\r\n    "message": "Login successful.",\r\n    "data": {\r\n        "id": 1,\r\n        "first_name": "Khalid",\r\n        "last_name": "Ghanim",\r\n        "email": "khalid@test.com",\r\n        "phone": "123456789",\r\n        "account_type": "customer",\r\n        "token": "1|abc..."\r\n    }\r\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"error-responses",children:"Error Responses"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"401 Unauthorized:"})," If credentials are invalid."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"403 Forbidden:"})," If the account has not been verified/activated yet."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"2-activate-account",children:"2. Activate Account"}),"\n",(0,r.jsxs)(n.p,{children:["This endpoint activates a user's account using the OTP sent during the ",(0,r.jsx)(n.a,{href:"./registration",children:"Registration"})," process."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Endpoint:"})," ",(0,r.jsx)(n.code,{children:"POST /api/v1/activate-account"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Method:"})," ",(0,r.jsx)(n.code,{children:"POST"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Authentication:"})," Not required"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"request-body-1",children:"Request Body"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Rules"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"email"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Required, valid email."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"otp"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Required, 4 digits."})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"success-response-200-ok-1",children:"Success Response (200 OK)"}),"\n",(0,r.jsx)(n.p,{children:"Returns user data and an access token, confirming the account is now active."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\r\n    "message": "Account verified successfully.",\r\n    "data": {\r\n        "id": 1,\r\n        "first_name": "Khalid",\r\n        "last_name": "Ghanim",\r\n        "email": "khalid@test.com",\r\n        "phone": "123456789",\r\n        "account_type": "customer",\r\n        "token": "2|def..."\r\n    }\r\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"error-response-422-unprocessable-entity",children:"Error Response (422 Unprocessable Entity)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"If the OTP is invalid or expired."}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"3-resend-otp",children:"3. Resend OTP"}),"\n",(0,r.jsx)(n.p,{children:"This endpoint resends an activation OTP to a user's registered email."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Endpoint:"})," ",(0,r.jsx)(n.code,{children:"POST /api/v1/resend-otp"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Method:"})," ",(0,r.jsx)(n.code,{children:"POST"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Authentication:"})," Not required"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"request-body-2",children:"Request Body"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Rules"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"email"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Required, valid email."})]})})]}),"\n",(0,r.jsx)(n.h3,{id:"success-response-200-ok-2",children:"Success Response (200 OK)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\r\n    "message": "OTP has been resent successfully.",\r\n    "data": {\r\n        "end_at": "2024-08-01T12:05:00.000000Z"\r\n    }\r\n}\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"end_at"}),": The new expiry timestamp for the resent OTP."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"error-response-400-bad-request",children:"Error Response (400 Bad Request)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"If the account is already verified."}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"code-highlights--key-concepts",children:"Code Highlights & Key Concepts"}),"\n",(0,r.jsxs)(n.h4,{id:"login-loginaction",children:["Login (",(0,r.jsx)(n.code,{children:"LoginAction"}),")"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Rate Limiting"}),": The login attempt is rate-limited by email address (",(0,r.jsx)(n.code,{children:"RateLimiter::attempt"}),"). This prevents brute-force attacks. If a user makes too many failed attempts (5 in this case), they are locked out for a period of time (900 seconds / 15 minutes)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Custom Authentication Guard"}),": The code uses a specific auth guard ",(0,r.jsx)(n.code,{children:"Auth::shouldUse('user-login')"})," before attempting to authenticate. This is important for applications that have multiple user models or authentication systems (e.g., one for regular users, one for admins)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Post-Authentication Checks"}),": After a successful password verification with ",(0,r.jsx)(n.code,{children:"Auth::attempt()"}),", the code performs several crucial checks:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Email Verification"}),": It checks if ",(0,r.jsx)(n.code,{children:"email_verified_at"})," is set. If not, it throws an error and re-sends an OTP, preventing unverified users from logging in."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Account Status"}),": It checks the ",(0,r.jsx)(n.code,{children:"status"})," of the specific user type (",(0,r.jsx)(n.code,{children:"customer"})," or ",(0,r.jsx)(n.code,{children:"provider"}),"). A provider who is still ",(0,r.jsx)(n.code,{children:"REVIEWING"})," or has been ",(0,r.jsx)(n.code,{children:"REJECTED"})," cannot log in. This logic is separated into ",(0,r.jsx)(n.code,{children:"validateCustomer"})," and ",(0,r.jsx)(n.code,{children:"validateProvider"})," methods."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Scoped Token Generation"}),": Upon successful login, a Sanctum API token is created specifically for the user's role (",(0,r.jsx)(n.code,{children:"$user->customer->createToken(...)"})," or ",(0,r.jsx)(n.code,{children:"$user->provider->createToken(...)"}),"). This means a customer token cannot be used to access provider-only endpoints, and vice-versa."]}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"activate-account-activateaccountaction",children:["Activate Account (",(0,r.jsx)(n.code,{children:"ActivateAccountAction"}),")"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"OTP Validation"}),": The action first checks if the account isn't already verified. It then validates that the provided OTP matches the one in the database and that it has not expired (",(0,r.jsx)(n.code,{children:"$user->otpVerification->expires_at->isPast()"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Status Update Logic"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["If the user is a ",(0,r.jsx)(n.strong,{children:"Customer"}),", their status is immediately set to ",(0,r.jsx)(n.code,{children:"ACTIVE"}),", and they are issued an API token, allowing them to log in and use the app."]}),"\n",(0,r.jsxs)(n.li,{children:["If the user is a ",(0,r.jsx)(n.strong,{children:"Provider"}),", their status is set to ",(0,r.jsx)(n.code,{children:"REVIEWING"}),". They are ",(0,r.jsx)(n.strong,{children:"not"})," issued a token yet. Instead, an email (",(0,r.jsx)(n.code,{children:"ProviderReviewingMail"}),") is sent to them, informing them that their account is pending admin approval. They will only be able to log in after an admin activates their account."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"OTP Deletion"}),": Upon successful verification, the OTP record is deleted from the database (",(0,r.jsx)(n.code,{children:"$user->otpVerification()->delete()"}),") to prevent it from being used again."]}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"resend-otp-resendotpaction",children:["Resend OTP (",(0,r.jsx)(n.code,{children:"ResendOtpAction"}),")"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Time-Based Rate Limiting"}),": This action has a different kind of rate limit. It checks if an OTP was recently sent (",(0,r.jsx)(n.code,{children:"$otpVerification->wasRecentlyCreated"})," or if 5 minutes have passed since the last update). This prevents users from spamming the OTP email service. If the user tries to resend too soon, it returns a ",(0,r.jsx)(n.code,{children:"429 Too Many Requests"})," error and tells them how long they need to wait."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>d});var i=s(6540);const r={},t=i.createContext(r);function o(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);