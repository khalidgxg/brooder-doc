"use strict";(self.webpackChunkbrooder=self.webpackChunkbrooder||[]).push([[9382],{8453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>a});var r=n(6540);const t={},i=r.createContext(t);function o(e){const s=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(i.Provider,{value:s},e.children)}},8899:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"workflows/support/locations","title":"Locations","description":"This workflow provides endpoints to retrieve geographical data, specifically states and their associated cities. This data is essential for user registration and profile completion.","source":"@site/docs/workflows/support/locations.md","sourceDirName":"workflows/support","slug":"/workflows/support/locations","permalink":"/brooder-doc/docs/workflows/support/locations","draft":false,"unlisted":false,"editUrl":"https://github.com/khalidgxg/brooder/tree/main/docs/workflows/support/locations.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"General Support","permalink":"/brooder-doc/docs/workflows/support/general"},"next":{"title":"Categories, Skills, and Keywords","permalink":"/brooder-doc/docs/workflows/support/categories-and-skills"}}');var t=n(4848),i=n(8453);const o={},a="Locations",d={},l=[{value:"Flow Diagram",id:"flow-diagram",level:2},{value:"1. Get All States",id:"1-get-all-states",level:2},{value:"Success Response (200 OK)",id:"success-response-200-ok",level:3},{value:"2. Get Cities by State",id:"2-get-cities-by-state",level:2},{value:"URL Parameters",id:"url-parameters",level:3},{value:"Success Response (200 OK)",id:"success-response-200-ok-1",level:3},{value:"Error Response (404 Not Found)",id:"error-response-404-not-found",level:3},{value:"Code Highlights &amp; Key Concepts",id:"code-highlights--key-concepts",level:3}];function c(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"locations",children:"Locations"})}),"\n",(0,t.jsx)(s.p,{children:"This workflow provides endpoints to retrieve geographical data, specifically states and their associated cities. This data is essential for user registration and profile completion."}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"flow-diagram",children:"Flow Diagram"}),"\n",(0,t.jsx)(s.mermaid,{value:'graph TD;\r\n    subgraph "Locations Workflow"\r\n        A["User requests list of all states"] --\x3e B{"GET /api/v1/states"};\r\n        B --\x3e C["Fetch all records from \'states\' table"];\r\n        C --\x3e D["Return collection of states<br>(ID, name_ar, name_en)"];\r\n\r\n        E["User requests cities for a specific state"] --\x3e F{"GET /api/v1/states/{id}/cities"};\r\n        F --\x3e G["Find state by {id}"];\r\n        G --\x3e H["Fetch all cities where state_id matches"];\r\n        H --\x3e I["Return collection of cities<br>(ID, name_ar, name_en)"];\r\n        G -- State not found --\x3e J["Return 404 Not Found error"];\r\n    end'}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"1-get-all-states",children:"1. Get All States"}),"\n",(0,t.jsx)(s.p,{children:"This endpoint retrieves a list of all available states."}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Endpoint:"})," ",(0,t.jsx)(s.code,{children:"GET /api/v1/states"})]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Method:"})," ",(0,t.jsx)(s.code,{children:"GET"})]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Authentication:"})," Not required"]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"success-response-200-ok",children:"Success Response (200 OK)"}),"\n",(0,t.jsx)(s.p,{children:"Returns an array of state objects."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'{\r\n    "message": "Data retrieved successfully.",\r\n    "data": [\r\n        {\r\n            "id": 1,\r\n            "name_ar": "\u0627\u0644\u0631\u064a\u0627\u0636",\r\n            "name_en": "Riyadh"\r\n        },\r\n        {\r\n            "id": 2,\r\n            "name_ar": "\u062c\u062f\u0629",\r\n            "name_en": "Jeddah"\r\n        }\r\n    ]\r\n}\n'})}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"2-get-cities-by-state",children:"2. Get Cities by State"}),"\n",(0,t.jsx)(s.p,{children:"This endpoint retrieves a list of cities belonging to a specific state, identified by its ID."}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Endpoint:"})," ",(0,t.jsx)(s.code,{children:"GET /api/v1/states/{id}/cities"})]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Method:"})," ",(0,t.jsx)(s.code,{children:"GET"})]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Authentication:"})," Not required"]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"url-parameters",children:"URL Parameters"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Parameter"}),(0,t.jsx)(s.th,{children:"Type"}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsx)(s.tbody,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"id"})}),(0,t.jsx)(s.td,{children:"integer"}),(0,t.jsx)(s.td,{children:"The ID of the parent state."})]})})]}),"\n",(0,t.jsx)(s.h3,{id:"success-response-200-ok-1",children:"Success Response (200 OK)"}),"\n",(0,t.jsx)(s.p,{children:"Returns an array of city objects for the given state."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'{\r\n    "message": "Data retrieved successfully.",\r\n    "data": [\r\n        {\r\n            "id": 101,\r\n            "name_ar": "\u0627\u0644\u062f\u0631\u0639\u064a\u0629",\r\n            "name_en": "Diriyah"\r\n        },\r\n        {\r\n            "id": 102,\r\n            "name_ar": "\u0627\u0644\u062e\u0631\u062c",\r\n            "name_en": "Al-Kharj"\r\n        }\r\n    ]\r\n}\n'})}),"\n",(0,t.jsx)(s.h3,{id:"error-response-404-not-found",children:"Error Response (404 Not Found)"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["If the ",(0,t.jsx)(s.code,{children:"id"})," provided in the URL does not correspond to an existing state."]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"code-highlights--key-concepts",children:"Code Highlights & Key Concepts"}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Simplicity and Performance"}),": The ",(0,t.jsx)(s.code,{children:"IndexStateAction"})," and ",(0,t.jsx)(s.code,{children:"IndexCityAction"})," are very direct. They use ",(0,t.jsx)(s.code,{children:"::query()->select([...])->get()"})," to fetch data. The explicit use of ",(0,t.jsx)(s.code,{children:"select()"})," is a good performance practice, as it ensures that only the necessary columns (",(0,t.jsx)(s.code,{children:"id"}),", ",(0,t.jsx)(s.code,{children:"name_ar"}),", ",(0,t.jsx)(s.code,{children:"name_en"}),") are retrieved from the database, reducing memory usage and query time."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Route Model Binding (Implicit)"}),": In the ",(0,t.jsx)(s.code,{children:"IndexCityAction"}),", the line ",(0,t.jsx)(s.code,{children:"$state = State::query()->findOrFail($id);"})," is a manual implementation of what Laravel can do automatically with Route Model Binding. It safely finds the parent ",(0,t.jsx)(s.code,{children:"State"})," model or immediately throws a ",(0,t.jsx)(s.code,{children:"404 Not Found"})," exception if the ID is invalid, preventing any further code execution. This is a robust way to handle nested resource routes."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);