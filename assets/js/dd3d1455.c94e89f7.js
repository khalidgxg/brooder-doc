"use strict";(self.webpackChunkbrooder=self.webpackChunkbrooder||[]).push([[4651],{2133:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"workflows/provider/skill-management","title":"Skill Management (Provider)","description":"This document describes how providers manage their personal list of skills. For a general overview of what skills and categories are, see the Support: Categories and Skills documentation.","source":"@site/docs/workflows/provider/skill-management.md","sourceDirName":"workflows/provider","slug":"/workflows/provider/skill-management","permalink":"/brooder-doc/docs/workflows/provider/skill-management","draft":false,"unlisted":false,"editUrl":"https://github.com/khalidgxg/brooder/tree/main/docs/workflows/provider/skill-management.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Profile Management (Provider)","permalink":"/brooder-doc/docs/workflows/provider/profile-management"},"next":{"title":"Service Management (Provider)","permalink":"/brooder-doc/docs/workflows/provider/service-management"}}');var l=i(4848),n=i(8453);const t={},d="Skill Management (Provider)",o={},c=[{value:"1. List All Skills",id:"1-list-all-skills",level:2},{value:"2. Update Provider&#39;s Skills",id:"2-update-providers-skills",level:2},{value:"Process Overview",id:"process-overview",level:3},{value:"Request Body",id:"request-body",level:3},{value:"Core Logic &amp; Key Concepts",id:"core-logic--key-concepts",level:3}];function a(e){const s={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",mermaid:"mermaid",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(s.header,{children:(0,l.jsx)(s.h1,{id:"skill-management-provider",children:"Skill Management (Provider)"})}),"\n",(0,l.jsxs)(s.p,{children:["This document describes how providers manage their personal list of skills. For a general overview of what skills and categories are, see the ",(0,l.jsx)(s.a,{href:"../support/categories-and-skills",children:"Support: Categories and Skills documentation"}),"."]}),"\n",(0,l.jsx)(s.p,{children:"This workflow allows providers to manage the skills associated with their profile. They can list all skills available on the platform and update their personal list of skills."}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h2,{id:"1-list-all-skills",children:"1. List All Skills"}),"\n",(0,l.jsx)(s.p,{children:"Providers can retrieve a list of all skills available in the system."}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Endpoint:"})," ",(0,l.jsx)(s.code,{children:"GET /api/v1/provider/skills"})]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Authorization:"})," Bearer Token (Provider)"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Action:"})," ",(0,l.jsx)(s.code,{children:"Providers\\Skills\\IndexSkillAction"})]}),"\n"]}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h2,{id:"2-update-providers-skills",children:"2. Update Provider's Skills"}),"\n",(0,l.jsx)(s.p,{children:"This endpoint allows a provider to set or update their list of skills. It intelligently handles both existing skills and new, user-defined skills."}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Endpoint:"})," ",(0,l.jsx)(s.code,{children:"POST /api/v1/provider/skills"})]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Authorization:"})," Bearer Token (Provider)"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Action:"})," ",(0,l.jsx)(s.code,{children:"Providers\\Skills\\StoreSkillAction"})]}),"\n"]}),"\n",(0,l.jsx)(s.h3,{id:"process-overview",children:"Process Overview"}),"\n",(0,l.jsxs)(s.p,{children:["The ",(0,l.jsx)(s.code,{children:"StoreSkillAction"})," takes a list of new skill names and existing skill IDs and synchronizes them with the provider's profile."]}),"\n",(0,l.jsx)(s.mermaid,{value:'graph TD;\r\n    A["Provider sends POST to /skills"] --\x3e B["StoreSkillAction"];\r\n    B --\x3e C{"Process `new_skills` array"};\r\n    C --\x3e D["For each name:<br>Use `Skill::firstOrCreate()`<br>to get ID of existing or new skill"];\r\n    D --\x3e E["Collect all skill IDs"];\r\n    B --\x3e F["Merge `new_skills` IDs with `old_skills` IDs"];\r\n    F --\x3e G["`provider->skills()->sync(all_ids)`"];\r\n    G --\x3e H((Success: Provider\'s skills are updated));'}),"\n",(0,l.jsx)(s.h3,{id:"request-body",children:"Request Body"}),"\n",(0,l.jsxs)(s.table,{children:[(0,l.jsx)(s.thead,{children:(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.th,{children:"Field"}),(0,l.jsx)(s.th,{children:"Type"}),(0,l.jsx)(s.th,{children:"Rules"}),(0,l.jsx)(s.th,{children:"Description"})]})}),(0,l.jsxs)(s.tbody,{children:[(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"old_skills"})}),(0,l.jsx)(s.td,{children:"array"}),(0,l.jsxs)(s.td,{children:[(0,l.jsx)(s.code,{children:"sometimes"}),", ",(0,l.jsx)(s.code,{children:"array"})]}),(0,l.jsx)(s.td,{children:"An array of numeric IDs for existing skills."})]}),(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"old_skills.*"})}),(0,l.jsx)(s.td,{children:"int"}),(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"exists:skills,id"})}),(0,l.jsxs)(s.td,{children:["Each ID must correspond to a skill in the ",(0,l.jsx)(s.code,{children:"skills"})," table."]})]}),(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"new_skills"})}),(0,l.jsx)(s.td,{children:"array"}),(0,l.jsxs)(s.td,{children:[(0,l.jsx)(s.code,{children:"sometimes"}),", ",(0,l.jsx)(s.code,{children:"array"})]}),(0,l.jsx)(s.td,{children:"An array of strings for new skills to be created."})]}),(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.td,{children:(0,l.jsx)(s.code,{children:"new_skills.*"})}),(0,l.jsx)(s.td,{children:"string"}),(0,l.jsxs)(s.td,{children:[(0,l.jsx)(s.code,{children:"string"}),", ",(0,l.jsx)(s.code,{children:"distinct"})]}),(0,l.jsx)(s.td,{children:"Each new skill name must be unique within the request."})]})]})]}),"\n",(0,l.jsx)(s.h3,{id:"core-logic--key-concepts",children:"Core Logic & Key Concepts"}),"\n",(0,l.jsxs)(s.ol,{children:["\n",(0,l.jsxs)(s.li,{children:["\n",(0,l.jsxs)(s.p,{children:[(0,l.jsxs)(s.strong,{children:[(0,l.jsx)(s.code,{children:"firstOrCreate"})," for Efficiency"]}),": The action uses ",(0,l.jsx)(s.code,{children:"Skill::firstOrCreate()"})," to handle the ",(0,l.jsx)(s.code,{children:"new_skills"}),". This is highly efficient as it avoids duplicate skill entries in the main ",(0,l.jsx)(s.code,{children:"skills"}),' table. If a provider adds a skill that another provider has already created (e.g., "Graphic Design"), the system reuses the existing record instead of making a new one.']}),"\n"]}),"\n",(0,l.jsxs)(s.li,{children:["\n",(0,l.jsxs)(s.p,{children:[(0,l.jsxs)(s.strong,{children:[(0,l.jsx)(s.code,{children:"sync()"})," for Synchronization"]}),": The ",(0,l.jsx)(s.code,{children:"sync()"})," method is the key to this operation. Instead of manually attaching and detaching skills, ",(0,l.jsx)(s.code,{children:"sync()"})," takes a complete list of the skills the provider ",(0,l.jsx)(s.em,{children:"should"})," have. It then automatically calculates the difference:"]}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:["It ",(0,l.jsx)(s.strong,{children:"detaches"})," any skills the provider was previously linked to but are not in the new list."]}),"\n",(0,l.jsxs)(s.li,{children:["It ",(0,l.jsx)(s.strong,{children:"attaches"})," any skills from the new list that the provider wasn't linked to before."]}),"\n",(0,l.jsxs)(s.li,{children:["It ",(0,l.jsx)(s.strong,{children:"leaves"})," any existing links that are still valid.\r\nThis makes the update process atomic and reliable."]}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,l.jsx)(s,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}},8453:(e,s,i)=>{i.d(s,{R:()=>t,x:()=>d});var r=i(6540);const l={},n=r.createContext(l);function t(e){const s=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:t(e.components),r.createElement(n.Provider,{value:s},e.children)}}}]);